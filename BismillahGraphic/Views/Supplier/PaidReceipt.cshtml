@model BismillahGraphic.DataCore.PurchasePaymentReceiptPrint
@{
    ViewBag.Title = "Supplier Paid Receipt";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section Styles{
    <link href="~/CSS/multiReceipt.css" rel="stylesheet" />
}

<section class="my-4 d-print-none">
    <div class="card">
        <div class="card-body d-flex justify-content-between">
            <a class="btn btn-elegant btn-rounded" href="/Supplier/Purchase"><i class="fas fa-shopping-cart mr-1"></i>Purchase</a>
            <button class="btn btn-default btn-rounded" onclick="print()"><i class="fas fa-print mr-1"></i>Print</button>
        </div>
    </div>  
</section>

<div id="main-page">
    <div class="row mb-4 receipt-date">
        <div class="col pt-3">
            RECEIPT# @Model.ReceiptSN
        </div>
        <div class="col text-center">
            <h5>INVOICE</h5>
        </div>
        <div class="col text-right col pt-3">
            Paid Date: @Model.PaidDate.ToString("d MMM yyyy")
        </div>
    </div>

    <div id="vendor-area" class="row">
        <div class="col">
            <h5>Company: <strong>@Model.SupplierInfo.SupplierCompanyName</strong></h5>
            <h5>Name: <strong>@Model.SupplierInfo.SupplierName</strong></h5>
        </div>
        <div class="col text-right">
            <h5>Phone: <strong>@Model.SupplierInfo.SupplierPhone</strong></h5>
            <h5>Address: <strong>@Model.SupplierInfo.SupplierAddress</strong></h5>
        </div>
    </div>

    <table>
        <thead>
        <tr>
            <th style="width: 30px"><strong>No.</strong></th>
            <th><strong>Purchase Date</strong></th>
            <th><strong>Bill No.</strong></th>
            <th><strong>Amount</strong></th>
            <th><strong>Paid</strong></th>
        </tr>
        </thead>
        <tbody>
        @{
            var index = 0;
            foreach (var item in Model.Invoices)
            {
                index++;
                <tr>
                    <td>@index</td>
                    <td>@item.PurchaseDate.ToString("d MMM yyyy")</td>
                    <td><a href="/Supplier/Receipt/@item.PurchaseID" target="_blank">@item.PurchaseSN</a></td>
                    <td>@item.PurchaseAmount/-</td>
                    <td>@item.PurchasePaidAmount/-</td>
                </tr>
            }
        }
        <tr>
            <td colspan="4">
                <span id="amount-word"></span>
            </td>
            <td>
                <div class="text-right">
                    <h5>Total Paid: <strong>@Model.PaidAmount/-</strong></h5>
                    <h5>Payment Method: <strong>@Model.Payment_Situation</strong></h5>
                </div>
            </td>
        </tr>
        </tbody>
    </table>

    <h4 class="mt-3">@Model.Description</h4>

    <div class="p-footer mt-4">
        <div class="row">
            <div class="col">
                Received By
                <small class="d-block text-muted">@DateTime.Now.ToString("ddd, dd-MMM-yyyy (hh: mm tt)")</small>
            </div>
            <div class="col text-center font-weight-bold">
                Thank you for your business!
                <small class="d-block text-muted">Technical support: www.loopsit.com</small>
            </div>

            <div class="col text-right">
                For: <strong>@Model.InstitutionInfo.InstitutionName</strong>
                <small class="d-block text-muted">Served By: <strong>@Model.CollectBy</strong></small>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        function number2text(value) {
            const fraction = Math.round((value % 1) * 100);
            var fullText = "";

            if (fraction > 0) {
                fullText = `AND ${convertNumber(fraction)} PAISA`;
            }

            return convertNumber(value) + " TK " + fullText + " ONLY";
        }

        function convertNumber(number) {
            if ((number < 0) || (number > 999999999)) return "NUMBER OUT OF RANGE!";

            var coreAmount = Math.floor(number / 10000000);
            number -= coreAmount * 10000000;

            var lakhAmount = Math.floor(number / 100000);
            number -= lakhAmount * 100000;

            var thousandAmount = Math.floor(number / 1000);
            number -= thousandAmount * 1000;

            var hundredAmount = Math.floor(number / 100);
            number = number % 100;

            var tn = Math.floor(number / 10);
            var one = Math.floor(number % 10);
            var res = "";

            if (coreAmount > 0) {
                res += (convertNumber(coreAmount) + " CRORE");
            }
            if (lakhAmount > 0) {
                res += (((res === "") ? "" : " ") + convertNumber(lakhAmount) + " LAKH");
            }
            if (thousandAmount > 0) {
                res += (((res === "") ? "" : " ") + convertNumber(thousandAmount) + " THOUSAND");
            }

            if (hundredAmount) {
                res += (((res === "") ? "" : " ") + convertNumber(hundredAmount) + " HUNDRED");
            }


            var ones = Array("", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN");
            var tens = Array("", "", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY");

            if (tn > 0 || one > 0) {
                if (!(res === "")) {
                    res += " AND ";
                }

                if (tn < 2) {
                    res += ones[tn * 10 + one];
                } else {
                    res += tens[tn];
                    if (one > 0) {
                        res += (`-${ones[one]}`);
                    }
                }
            }

            if (res === "") {
                res = "zero";
            }
            return res;
        }

        $(function() {
            $("#amount-word").text(`Taka (in word): ${number2text(@Model.PaidAmount)}`);
        });
    </script>
}

