@model BismillahGraphic.DataCore.SellingReceipt
@{
    ViewBag.Title = "Due Collection";
    Layout = "~/Views/Shared/_AdminLayoutPage.cshtml";
}

@section Styles
{
    <style>
        #main-page table tr td:nth-child(1) { text-align: center; }
        #main-page table tr td:nth-child(4) { text-align: center; }
        #main-page table tr td:nth-child(5) { text-align: right; }
        #main-page table tr td:nth-child(6) { text-align: right; }

        #main-page table h5 { font-weight: 400; font-size: 16px }
        #amount-word { text-transform: lowercase; font-style: italic; font-size: 14px }
    </style>
}


    <div id="main-page" class="m-md-4">
        <div class="card card-body">
            <input id="vendorId" type="hidden" value="@Model.VendorInfo.VendorID"/>
            <input id="sellingId" type="hidden" value="@Model.SellingInfo.SellingID"/>

            <section class="mb-4 d-print-none">
                <div class="d-flex justify-content-between">
                    <h3 class="mt-3 h3-responsive">Due Collection</h3>
                    <div>
                        <a class="btn btn-elegant btn-rounded" href="/Selling/Record"><i class="fas fa-list mr-1"></i>Selling Record</a>
                        <a href="/Vendors/Index" class="btn btn-blue btn-rounded"><i class="fas fa-user mr-1"></i>Vendor</a>
                    </div>
                </div>
            </section>

            <div class="row mb-1">
                <div class="col">
                    <strong>RECEIPT# @Model.SellingInfo.SellingSN</strong>
                </div>
                <div class="col text-right">
                    <strong>Selling Date: @Model.SellingInfo.SellingDate.ToString("d MMM yyyy")</strong>
                </div>
            </div>
            <hr/>

            <div class="mdb-color darken-2 white-text p-3 mb-4 rounded">
                <div class="row">
                    <div class="col">
                        Company: <strong class="mr-3">@Model.VendorInfo.VendorCompanyName.</strong>
                        Name: <strong>@Model.VendorInfo.VendorName.</strong>
                    </div>
                    <div class="col text-right">
                        Phone: <strong class="mr-3">@Model.VendorInfo.VendorPhone.</strong>
                        Address: <strong>@Model.VendorInfo.VendorAddress.</strong>
                    </div>
                </div>
            </div>

            <div class="table-responsive mb-4">
                <table class="table table-sm table-bordered">
                    <thead class="text-center">
                    <tr>
                        <th style="width: 30px"><strong>No.</strong></th>
                        <th><strong>Product&nbsp;Name</strong></th>
                        <th><strong>Description</strong></th>
                        <th><strong>Square&nbsp;Inch.</strong></th>
                        <th><strong>Unit&nbsp;Price</strong></th>
                        <th><strong>Line&nbsp;Total</strong></th>
                    </tr>
                    </thead>
                    <tbody>
                    @{
                        var index = 0;
                        foreach (var item in Model.SellingInfo.SellingList)
                        {
                            index++;
                            <tr>
                                <td>@index</td>
                                <td>@item.Product.ProductName</td>
                                <td>@item.Details</td>
                                <td>@item.SellingQuantity</td>
                                <td>@item.SellingUnitPrice/-</td>
                                <td>@item.SellingPrice/-</td>
                            </tr>
                        }
                    }
                    <tr>
                        <td colspan="5">
                            <span id="amount-word"></span>
                        </td>
                        <td>
                            <div class="text-right">
                                <h5>Total: <strong>@Model.SellingInfo.SellingTotalPrice/-</strong></h5>
                                @{
                                    var discount = Model.SellingInfo.SellingDiscountAmount;

                                    if (discount > 0)
                                    {
                                        <h5>Discount: <strong>@Model.SellingInfo.SellingDiscountAmount/-</strong></h5>
                                    }
                                }

                                <h5>Paid: <strong> @Model.SellingInfo.SellingPaidAmount/-</strong></h5>
                                <h5>Due: <strong>@Model.SellingInfo.SellingDueAmount/-</strong></h5>
                            </div>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>

            <div class="row">
                <div class="col-md-6">

                    @{
                        var paymentRecord = Model.SellingInfo.SellingPaymentRecord;

                        if (paymentRecord.Count > 0)
                        {
                            <div class="card card-body mb-3">
                                <h5 class="mt-4">PAYMENT RECORD</h5>
                                <table class="table table-sm table-bordered">
                                    <thead class="text-center">
                                    <tr>
                                        <th><strong>Paid Date</strong></th>
                                        <th><strong>Paid Amount</strong></th>
                                        <th><strong>Payment Method</strong></th>
                                    </tr>
                                    </thead>
                                    <tbody>


                                    @foreach (var item in paymentRecord)
                                    {
                                        <tr>
                                            <td>@item.SellingPaid_Date.ToString("d MMM yyyy")</td>
                                            <td class="text-right">@item.SellingPaidAmount/-</td>
                                            <td class="text-center">@item.Payment_Situation</td>
                                        </tr>
                                    }

                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>

                <div class="col-md-6">
                    <div id="payment-area" class="card card-body">
                        <h4>Total Due: ৳<strong id="dueAmount">@Model.SellingInfo.SellingDueAmount</strong></h4>
                        <form id="submitForm">
                            <div class="md-form">
                                <label for="inputPaid">Paid Amount</label>
                                <input required="" id="inputPaid" type="number" class="form-control" />
                            </div>
                            <div class="md-form mt-0">
                                <label for="inputPaidDate">Paid Date</label>
                                <input required="" id="inputPaidDate" type="text" class="form-control datepicker" />
                            </div>
                            <div class="md-form">
                                <select required="" id="selectPaymentMethod" class="mdb-select">
                                    <option value="" selected>[ Payment Method ]</option>
                                    <option>Cash</option>
                                    <option>Bank</option>
                                    <option>Cheque</option>
                                    <option>bkash</option>
                                </select>
                            </div>

                            <button type="submit" id="btnPaid" class="btn aqua-gradient btn-rounded d-block">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section scripts{
    <script>
        $(function() {
            $("#amount-word").text(`Taka (in word): ${number2text(@Model.SellingInfo.SellingTotalPrice)}`);

            $('.mdb-select').materialSelect();

            $('.datepicker').pickadate().val(moment(new Date()).format('DD MMMM, YYYY'));;
        });

        //number in word
        function number2text(value) {
            const fraction = Math.round((value % 1) * 100);
            var fullText = "";

            if (fraction > 0) {
                fullText = `AND ${convertNumber(fraction)} PAISA`;
            }

            return convertNumber(value) + " TK " + fullText + " ONLY";
        }

        function convertNumber(number) {
            if ((number < 0) || (number > 999999999)) return "NUMBER OUT OF RANGE!";

            var coreAmount = Math.floor(number / 10000000);
            number -= coreAmount * 10000000;

            var lakhAmount = Math.floor(number / 100000);
            number -= lakhAmount * 100000;

            var thousandAmount = Math.floor(number / 1000);
            number -= thousandAmount * 1000;

            var hundredAmount = Math.floor(number / 100);
            number = number % 100;

            var tn = Math.floor(number / 10);
            var one = Math.floor(number % 10);
            var res = "";

            if (coreAmount > 0) {
                res += (convertNumber(coreAmount) + " CRORE");
            }
            if (lakhAmount > 0) {
                res += (((res === "") ? "" : " ") + convertNumber(lakhAmount) + " LAKH");
            }
            if (thousandAmount > 0) {
                res += (((res === "") ? "" : " ") + convertNumber(thousandAmount) + " THOUSAND");
            }

            if (hundredAmount) {
                res += (((res === "") ? "" : " ") + convertNumber(hundredAmount) + " HUNDRED");
            }


            var ones = Array("", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN");
            var tens = Array("", "", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY");

            if (tn > 0 || one > 0) {
                if (!(res === "")) {
                    res += " AND ";
                }

                if (tn < 2) {
                    res += ones[tn * 10 + one];
                } else {
                    res += tens[tn];
                    if (one > 0) {
                        res += (`-${ones[one]}`);
                    }
                }
            }

            if (res === "") {
                res = "zero";
            }
            return res;
        }

        //Sell Submit
        //submit
        document.getElementById("submitForm").addEventListener("submit", submitValue);

        function submitValue(e) {
            const isValid = validation();
            const that = $("#btnPaid");

            const sellingId = $("#sellingId").val();
            const vendorId = $("#vendorId").val();
            const paidAmount = parseNumber($("#inputPaid").val());
            const paymentMethod = $("#selectPaymentMethod").children("option:selected").val();
            const paidDate = $("#inputPaidDate").val();
            const dueAmount = parseNumber($("#dueAmount").text());

            if (dueAmount < paidAmount) {
                alert("Paid amount greater than due amount!");
                return;
            }

            const data = {
                SellingID: sellingId,
                VendorID: vendorId,
                SellingPaidAmount: paidAmount,
                Payment_Situation: paymentMethod,
                SellingPaid_Date: paidDate
            };

            if (isValid) {
                $.ajax({
                    url: "/Selling/DueCollection",
                    data: JSON.stringify({ model: data }),
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function() { that.prop('disabled', true).val('Submitting..') },
                    success: function(response) {
                        if (response === "success")
                            location.href="/Selling/Receipt/@Model.SellingInfo.SellingID";
                    },
                    error: function(error) { console.log(error) },
                    complete: function() { that.prop('disabled', false).val('Submit') }
                });
            }

            e.preventDefault();
        };

        function validation() {
            var isValid = true;
            const paidAmount = parseNumber($("#inputPaid").val());
            const paymentMethod = $("#selectPaymentMethod").val();
            const paidDate = $("#inputPaidDate").val();

            if (paidAmount === "" || paidAmount <= 0) {
                isValid = false;
            } else if (paymentMethod === "") {
                isValid = false;
            } else if (paidDate === "") {
                isValid = false;
            }
            return isValid;
        }

        //convert to float number
        function parseNumber(n) {
            const f = parseFloat(n);
            return isNaN(f) ? 0 : f;
        }
    </script>
}

